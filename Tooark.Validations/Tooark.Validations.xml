<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Tooark.Validations</name>
    </assembly>
    <members>
        <member name="T:Tooark.Validations.Contract">
            <summary>
            Classe de validação de boolean.
            </summary>
            <summary>
            Classe de contrato
            </summary>
            <summary>
            Classe de validação de datas e horas.
            </summary>
            <summary>
            Classe de validação de decimal.
            </summary>
            <summary>
            Classe de validação de Documento.
            </summary>
            <summary>
            Classe de validação de double.
            </summary>
            <summary>
            Classe de validação de Email.
            </summary>
            <summary>
            Classe de validação de float.
            </summary>
            <summary>
            Classe de validação de Guid.
            </summary>
            <summary>
            Classe de validação de int.
            </summary>
            <summary>
            Classe de validação de List.
            </summary>
            <summary>
            Classe de validação de long.
            </summary>
            <summary>
            Classe de validação de Network.
            </summary>
            <summary>
            Classe de validação de object.
            </summary>
            <summary>
            Classe de validação de Protocol.
            </summary>
            <summary>
            Classe de validação de Regex.
            </summary>
            <summary>
            Classe de validação de string.
            </summary>
            <summary>
            Classe de validação de TimeSpan.
            </summary>
            <summary>
            Classe de validação de Type.
            </summary>
        </member>
        <member name="M:Tooark.Validations.Contract.BooleanFormat(System.Boolean)">
            <summary>
            Função para formatar para tipo boolean.
            </summary>
            <param name="value">Valor a ser formatado.</param>
            <returns>Valor formatado.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.Validate(System.Boolean,System.Boolean,System.String,System.String,System.Func{System.Boolean,System.Boolean,System.Boolean})">
            <summary>
            Função para validar condição.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <param name="condition">Condição a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.ValidateList(System.Boolean,System.Boolean[],System.String,System.String,System.Func{System.Boolean,System.Boolean[],System.Boolean})">
            <summary>
            Função para validar lista de condição.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista a ser comparada.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <param name="condition">Condição a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsFalse(System.Boolean,System.String)">
            <summary>
            Valida se o valor é falso. Com a mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Nome da propriedade.</param>
            <returns>Contrato.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsFalse(System.Boolean,System.String,System.String)">
            <summary>
            Valida se o valor é falso.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Nome da propriedade.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsTrue(System.Boolean,System.String)">
            <summary>
            Valida se o valor é verdadeiro. Com a mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Nome da propriedade.</param>
            <returns>Contrato.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsTrue(System.Boolean,System.String,System.String)">
            <summary>
            Valida se o valor é verdadeiro.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Nome da propriedade.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.Contains(System.Boolean,System.Boolean[],System.String)">
            <summary>
            Verifica se contém o valor na lista. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.Contains(System.Boolean,System.Boolean[],System.String,System.String)">
            <summary>
            Verifica se contém o valor na lista. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.NotContains(System.Boolean,System.Boolean[],System.String)">
            <summary>
            Verifica se não contém o valor na lista. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.NotContains(System.Boolean,System.Boolean[],System.String,System.String)">
            <summary>
            Verifica se não contém o valor na lista. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.All(System.Boolean,System.Boolean[],System.String)">
            <summary>
            Verifica se todos os valores são iguais ao valor comparado. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.All(System.Boolean,System.Boolean[],System.String,System.String)">
            <summary>
            Verifica se todos os valores são iguais ao valor comparado.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.NotAll(System.Boolean,System.Boolean[],System.String)">
            <summary>
            Verifica se todos os valores são diferentes ao valor comparado. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.NotAll(System.Boolean,System.Boolean[],System.String,System.String)">
            <summary>
            Verifica se todos os valores são diferentes ao valor comparado.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNull(System.Nullable{System.Boolean},System.String)">
            <summary>
            Valida se o valor é nulo. Com a mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Nome da propriedade.</param>
            <returns>Contrato.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNull(System.Nullable{System.Boolean},System.String,System.String)">
            <summary>
            Valida se o valor é nulo.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Nome da propriedade.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotNull(System.Nullable{System.Boolean},System.String)">
            <summary>
            Valida se o valor não é nulo. Com a mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Nome da propriedade.</param>
            <returns>Contrato.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotNull(System.Nullable{System.Boolean},System.String,System.String)">
            <summary>
            Valida se o valor é nulo.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Nome da propriedade.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.Join(Tooark.Notifications.Notification[])">
            <summary>
            Juntar mais de uma notificação
            </summary>
            <param name="notifications"></param>
            <returns></returns>
        </member>
        <member name="M:Tooark.Validations.Contract.ValidateNull``1(``0,System.Boolean,System.String,System.String)">
            <summary>
            Função para validar nulo.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="returnAwait">Retorno aguardado da comparação.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.DateTimeFormat(System.DateTime)">
            <summary>
            Função para formatar para tipo DateTime.
            </summary>
            <param name="value">Valor a ser formatado.</param>
            <returns>Valor formatado.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.ConvertToDateTime``1(``0)">
            <summary>
            Função para converter para DateTime.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser convertido.</param>
            <returns>Valor convertido.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.Validate(System.DateTime,System.DateTime,System.String,System.String,System.Func{System.DateTime,System.DateTime,System.Boolean})">
            <summary>
            Função para validar condição.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <param name="condition">Condição a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.Validate``1(System.DateTime,``0,System.String,System.String,System.Func{System.DateTime,System.DateTime,System.Boolean})">
            <summary>
            Função para validar condição.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <param name="condition">Condição a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.ValidateList(System.DateTime,System.DateTime[],System.String,System.String,System.Func{System.DateTime,System.DateTime[],System.Boolean})">
            <summary>
            Função para validar lista de condição.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista a ser comparada.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <param name="condition">Condição a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.ValidateList``1(System.DateTime,``0[],System.String,System.String,System.Func{System.DateTime,System.DateTime[],System.Boolean})">
            <summary>
            Função para validar lista de condição.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista a ser comparada.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <param name="condition">Condição a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsGreater``1(System.DateTime,``0,System.String)">
            <summary>
            Verifica se o valor é maior que o valor comparado. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsGreater``1(System.DateTime,``0,System.String,System.String)">
            <summary>
            Verifica se o valor é maior que o valor comparado.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsGreaterOrEquals``1(System.DateTime,``0,System.String)">
            <summary>
            Verifica se o valor é maior ou igual ao valor comparado. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsGreaterOrEquals``1(System.DateTime,``0,System.String,System.String)">
            <summary>
            Verifica se o valor é maior ou igual ao valor comparado.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsLower``1(System.DateTime,``0,System.String)">
            <summary>
            Verifica se o valor é menor que o valor comparado. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsLower``1(System.DateTime,``0,System.String,System.String)">
            <summary>
            Verifica se o valor é menor que o valor comparado.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsLowerOrEquals``1(System.DateTime,``0,System.String)">
            <summary>
            Verifica se o valor é menor ou igual ao valor comparado. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsLowerOrEquals``1(System.DateTime,``0,System.String,System.String)">
            <summary>
            Verifica se o valor é menor ou igual ao valor comparado.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsBetween``1(System.DateTime,``0,``0,System.String)">
            <summary>
            Verifica se o valor é entre os valores comparados. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="start">Valor inicial.</param>
            <param name="end">Valor final.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsBetween``1(System.DateTime,``0,``0,System.String,System.String)">
            <summary>
            Verifica se o valor é entre os valores comparados
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="start">Valor inicial.</param>
            <param name="end">Valor final.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotBetween``1(System.DateTime,``0,``0,System.String)">
            <summary>
            Verifica se o valor não é entre os valores comparados. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="start">Valor inicial.</param>
            <param name="end">Valor final.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotBetween``1(System.DateTime,``0,``0,System.String,System.String)">
            <summary>
            Verifica se o valor não é entre os valores comparados
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="start">Valor inicial.</param>
            <param name="end">Valor final.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsMin(System.DateTime,System.String)">
            <summary>
            Verifica se o valor é igual ao valor mínimo do tipo. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsMin(System.DateTime,System.String,System.String)">
            <summary>
            Verifica se o valor é igual ao valor mínimo do tipo.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotMin(System.DateTime,System.String)">
            <summary>
            Verifica se o valor é não igual ao valor mínimo do tipo. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotMin(System.DateTime,System.String,System.String)">
            <summary>
            Verifica se o valor é não igual ao valor mínimo do tipo.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsMax(System.DateTime,System.String)">
            <summary>
            Verifica se o valor é igual ao valor máximo do tipo. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsMax(System.DateTime,System.String,System.String)">
            <summary>
            Verifica se o valor é igual ao valor máximo do tipo.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotMax(System.DateTime,System.String)">
            <summary>
            Verifica se o valor é não igual ao valor máximo do tipo. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotMax(System.DateTime,System.String,System.String)">
            <summary>
            Verifica se o valor é não igual ao valor máximo do tipo.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.AreEquals``1(System.DateTime,``0,System.String)">
            <summary>
            Verifica se o valor é igual ao valor comparado. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.AreEquals``1(System.DateTime,``0,System.String,System.String)">
            <summary>
            Verifica se o valor é igual ao valor comparado.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.AreNotEquals``1(System.DateTime,``0,System.String)">
            <summary>
            Verifica se o valor não é igual ao valor comparado. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.AreNotEquals``1(System.DateTime,``0,System.String,System.String)">
            <summary>
            Verifica se o valor não é igual ao valor comparado.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.Contains``1(System.DateTime,``0[],System.String)">
            <summary>
            Verifica se contém o valor na lista. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.Contains``1(System.DateTime,``0[],System.String,System.String)">
            <summary>
            Verifica se contém o valor na lista.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.NotContains``1(System.DateTime,``0[],System.String)">
            <summary>
            Verifica se não contém o valor na lista. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.NotContains``1(System.DateTime,``0[],System.String,System.String)">
            <summary>
            Verifica se não contém o valor na lista.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.All``1(System.DateTime,``0[],System.String)">
            <summary>
            Verifica se todos os valores são iguais ao valor comparado. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.All``1(System.DateTime,``0[],System.String,System.String)">
            <summary>
            Verifica se todos os valores são iguais ao valor comparado.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.NotAll``1(System.DateTime,``0[],System.String)">
            <summary>
            Verifica se todos os valores são diferentes ao valor comparado. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.NotAll``1(System.DateTime,``0[],System.String,System.String)">
            <summary>
            Verifica se todos os valores são diferentes ao valor comparado.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNull(System.Nullable{System.DateTime},System.String)">
            <summary>
            Valida se o valor é nulo. Com a mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Nome da propriedade.</param>
            <returns>Contrato.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNull(System.Nullable{System.DateTime},System.String,System.String)">
            <summary>
            Valida se o valor é nulo.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Nome da propriedade.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotNull(System.Nullable{System.DateTime},System.String)">
            <summary>
            Valida se o valor não é nulo. Com a mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Nome da propriedade.</param>
            <returns>Contrato.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotNull(System.Nullable{System.DateTime},System.String,System.String)">
            <summary>
            Valida se o valor é nulo.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Nome da propriedade.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.DecimalFormat(System.Decimal)">
            <summary>
            Função para formatar para tipo decimal.
            </summary>
            <param name="value">Valor a ser formatado.</param>
            <returns>Valor formatado.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.ConvertToDecimal``1(``0)">
            <summary>
            Função para converter para decimal.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser convertido.</param>
            <returns>Valor convertido.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.Validate(System.Decimal,System.Decimal,System.String,System.String,System.Func{System.Decimal,System.Decimal,System.Boolean})">
            <summary>
            Função para validar condição.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <param name="condition">Condição a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.Validate``1(System.Decimal,``0,System.String,System.String,System.Func{System.Decimal,System.Decimal,System.Boolean})">
            <summary>
            Função para validar condição.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <param name="condition">Condição a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.ValidateList(System.Decimal,System.Decimal[],System.String,System.String,System.Func{System.Decimal,System.Decimal[],System.Boolean})">
            <summary>
            Função para validar lista de condição.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista a ser comparada.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <param name="condition">Condição a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.ValidateList``1(System.Decimal,``0[],System.String,System.String,System.Func{System.Decimal,System.Decimal[],System.Boolean})">
            <summary>
            Função para validar lista de condição.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista a ser comparada.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <param name="condition">Condição a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsGreater``1(System.Decimal,``0,System.String)">
            <summary>
            Verifica se o valor é maior que o valor comparado. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsGreater``1(System.Decimal,``0,System.String,System.String)">
            <summary>
            Verifica se o valor é maior que o valor comparado.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsGreaterOrEquals``1(System.Decimal,``0,System.String)">
            <summary>
            Verifica se o valor é maior ou igual ao valor comparado. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsGreaterOrEquals``1(System.Decimal,``0,System.String,System.String)">
            <summary>
            Verifica se o valor é maior ou igual ao valor comparado.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsLower``1(System.Decimal,``0,System.String)">
            <summary>
            Verifica se o valor é menor que o valor comparado. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsLower``1(System.Decimal,``0,System.String,System.String)">
            <summary>
            Verifica se o valor é menor que o valor comparado.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsLowerOrEquals``1(System.Decimal,``0,System.String)">
            <summary>
            Verifica se o valor é menor ou igual ao valor comparado. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsLowerOrEquals``1(System.Decimal,``0,System.String,System.String)">
            <summary>
            Verifica se o valor é menor ou igual ao valor comparado.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsBetween``1(System.Decimal,``0,``0,System.String)">
            <summary>
            Verifica se o valor é entre os valores comparados. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="start">Valor inicial.</param>
            <param name="end">Valor final.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsBetween``1(System.Decimal,``0,``0,System.String,System.String)">
            <summary>
            Verifica se o valor é entre os valores comparados
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="start">Valor inicial.</param>
            <param name="end">Valor final.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotBetween``1(System.Decimal,``0,``0,System.String)">
            <summary>
            Verifica se o valor não é entre os valores comparados. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="start">Valor inicial.</param>
            <param name="end">Valor final.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotBetween``1(System.Decimal,``0,``0,System.String,System.String)">
            <summary>
            Verifica se o valor não é entre os valores comparados
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="start">Valor inicial.</param>
            <param name="end">Valor final.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsMin(System.Decimal,System.String)">
            <summary>
            Verifica se o valor é igual ao valor mínimo do tipo. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsMin(System.Decimal,System.String,System.String)">
            <summary>
            Verifica se o valor é igual ao valor mínimo do tipo.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotMin(System.Decimal,System.String)">
            <summary>
            Verifica se o valor é não igual ao valor mínimo do tipo. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotMin(System.Decimal,System.String,System.String)">
            <summary>
            Verifica se o valor é não igual ao valor mínimo do tipo.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsMax(System.Decimal,System.String)">
            <summary>
            Verifica se o valor é igual ao valor máximo do tipo. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsMax(System.Decimal,System.String,System.String)">
            <summary>
            Verifica se o valor é igual ao valor máximo do tipo.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotMax(System.Decimal,System.String)">
            <summary>
            Verifica se o valor é não igual ao valor máximo do tipo. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotMax(System.Decimal,System.String,System.String)">
            <summary>
            Verifica se o valor é não igual ao valor máximo do tipo.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.AreEquals``1(System.Decimal,``0,System.String)">
            <summary>
            Verifica se o valor é igual ao valor comparado. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.AreEquals``1(System.Decimal,``0,System.String,System.String)">
            <summary>
            Verifica se o valor é igual ao valor comparado.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.AreNotEquals``1(System.Decimal,``0,System.String)">
            <summary>
            Verifica se o valor não é igual ao valor comparado. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.AreNotEquals``1(System.Decimal,``0,System.String,System.String)">
            <summary>
            Verifica se o valor não é igual ao valor comparado.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.Contains``1(System.Decimal,``0[],System.String)">
            <summary>
            Verifica se contém o valor na lista. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.Contains``1(System.Decimal,``0[],System.String,System.String)">
            <summary>
            Verifica se contém o valor na lista.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.NotContains``1(System.Decimal,``0[],System.String)">
            <summary>
            Verifica se não contém o valor na lista. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.NotContains``1(System.Decimal,``0[],System.String,System.String)">
            <summary>
            Verifica se não contém o valor na lista.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.All``1(System.Decimal,``0[],System.String)">
            <summary>
            Verifica se todos os valores são iguais ao valor comparado. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.All``1(System.Decimal,``0[],System.String,System.String)">
            <summary>
            Verifica se todos os valores são iguais ao valor comparado.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.NotAll``1(System.Decimal,``0[],System.String)">
            <summary>
            Verifica se todos os valores são diferentes ao valor comparado. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.NotAll``1(System.Decimal,``0[],System.String,System.String)">
            <summary>
            Verifica se todos os valores são diferentes ao valor comparado.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNull(System.Nullable{System.Decimal},System.String)">
            <summary>
            Valida se o valor é nulo. Com a mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Nome da propriedade.</param>
            <returns>Contrato.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNull(System.Nullable{System.Decimal},System.String,System.String)">
            <summary>
            Valida se o valor é nulo.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Nome da propriedade.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotNull(System.Nullable{System.Decimal},System.String)">
            <summary>
            Valida se o valor não é nulo. Com a mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Nome da propriedade.</param>
            <returns>Contrato.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotNull(System.Nullable{System.Decimal},System.String,System.String)">
            <summary>
            Valida se o valor é nulo.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Nome da propriedade.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsCpf(System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de CPF. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsCpf(System.String,System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de CPF.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsRg(System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de RG. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsRg(System.String,System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de RG.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsCnh(System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de CNH. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsCnh(System.String,System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de CNH.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsCpfRg(System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de CPF ou RG. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsCpfRg(System.String,System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de CPF ou RG.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsCpfRgCnh(System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de CPF, RG ou CNH. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsCpfRgCnh(System.String,System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de CPF, RG ou CNH.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsCnpj(System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de CNPJ. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsCnpj(System.String,System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de CNPJ.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsCpfCnpj(System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de CPF ou CNPJ. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsCpfCnpj(System.String,System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de CPF ou CNPJ.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.DoubleFormat(System.Double)">
            <summary>
            Função para formatar para tipo double.
            </summary>
            <param name="value">Valor a ser formatado.</param>
            <returns>Valor formatado.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.ConvertToDouble``1(``0)">
            <summary>
            Função para converter para double.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser convertido.</param>
            <returns>Valor convertido.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.Validate(System.Double,System.Double,System.String,System.String,System.Func{System.Double,System.Double,System.Boolean})">
            <summary>
            Função para validar condição.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <param name="condition">Condição a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.Validate``1(System.Double,``0,System.String,System.String,System.Func{System.Double,System.Double,System.Boolean})">
            <summary>
            Função para validar condição.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <param name="condition">Condição a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.ValidateList(System.Double,System.Double[],System.String,System.String,System.Func{System.Double,System.Double[],System.Boolean})">
            <summary>
            Função para validar lista de condição.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista a ser comparada.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <param name="condition">Condição a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.ValidateList``1(System.Double,``0[],System.String,System.String,System.Func{System.Double,System.Double[],System.Boolean})">
            <summary>
            Função para validar lista de condição.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista a ser comparada.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <param name="condition">Condição a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsGreater``1(System.Double,``0,System.String)">
            <summary>
            Verifica se o valor é maior que o valor comparado. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsGreater``1(System.Double,``0,System.String,System.String)">
            <summary>
            Verifica se o valor é maior que o valor comparado.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsGreaterOrEquals``1(System.Double,``0,System.String)">
            <summary>
            Verifica se o valor é maior ou igual ao valor comparado. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsGreaterOrEquals``1(System.Double,``0,System.String,System.String)">
            <summary>
            Verifica se o valor é maior ou igual ao valor comparado.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsLower``1(System.Double,``0,System.String)">
            <summary>
            Verifica se o valor é menor que o valor comparado. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsLower``1(System.Double,``0,System.String,System.String)">
            <summary>
            Verifica se o valor é menor que o valor comparado.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsLowerOrEquals``1(System.Double,``0,System.String)">
            <summary>
            Verifica se o valor é menor ou igual ao valor comparado. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsLowerOrEquals``1(System.Double,``0,System.String,System.String)">
            <summary>
            Verifica se o valor é menor ou igual ao valor comparado.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsBetween``1(System.Double,``0,``0,System.String)">
            <summary>
            Verifica se o valor é entre os valores comparados. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="start">Valor inicial.</param>
            <param name="end">Valor final.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsBetween``1(System.Double,``0,``0,System.String,System.String)">
            <summary>
            Verifica se o valor é entre os valores comparados
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="start">Valor inicial.</param>
            <param name="end">Valor final.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotBetween``1(System.Double,``0,``0,System.String)">
            <summary>
            Verifica se o valor não é entre os valores comparados. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="start">Valor inicial.</param>
            <param name="end">Valor final.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotBetween``1(System.Double,``0,``0,System.String,System.String)">
            <summary>
            Verifica se o valor não é entre os valores comparados
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="start">Valor inicial.</param>
            <param name="end">Valor final.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsMin(System.Double,System.String)">
            <summary>
            Verifica se o valor é igual ao valor mínimo do tipo. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsMin(System.Double,System.String,System.String)">
            <summary>
            Verifica se o valor é igual ao valor mínimo do tipo.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotMin(System.Double,System.String)">
            <summary>
            Verifica se o valor é não igual ao valor mínimo do tipo. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotMin(System.Double,System.String,System.String)">
            <summary>
            Verifica se o valor é não igual ao valor mínimo do tipo.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsMax(System.Double,System.String)">
            <summary>
            Verifica se o valor é igual ao valor máximo do tipo. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsMax(System.Double,System.String,System.String)">
            <summary>
            Verifica se o valor é igual ao valor máximo do tipo.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotMax(System.Double,System.String)">
            <summary>
            Verifica se o valor é não igual ao valor máximo do tipo. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotMax(System.Double,System.String,System.String)">
            <summary>
            Verifica se o valor é não igual ao valor máximo do tipo.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.AreEquals``1(System.Double,``0,System.String)">
            <summary>
            Verifica se o valor é igual ao valor comparado. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.AreEquals``1(System.Double,``0,System.String,System.String)">
            <summary>
            Verifica se o valor é igual ao valor comparado.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.AreNotEquals``1(System.Double,``0,System.String)">
            <summary>
            Verifica se o valor não é igual ao valor comparado. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.AreNotEquals``1(System.Double,``0,System.String,System.String)">
            <summary>
            Verifica se o valor não é igual ao valor comparado.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.Contains``1(System.Double,``0[],System.String)">
            <summary>
            Verifica se contém o valor na lista. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.Contains``1(System.Double,``0[],System.String,System.String)">
            <summary>
            Verifica se contém o valor na lista.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.NotContains``1(System.Double,``0[],System.String)">
            <summary>
            Verifica se não contém o valor na lista. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.NotContains``1(System.Double,``0[],System.String,System.String)">
            <summary>
            Verifica se não contém o valor na lista.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.All``1(System.Double,``0[],System.String)">
            <summary>
            Verifica se todos os valores são iguais ao valor comparado. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.All``1(System.Double,``0[],System.String,System.String)">
            <summary>
            Verifica se todos os valores são iguais ao valor comparado.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.NotAll``1(System.Double,``0[],System.String)">
            <summary>
            Verifica se todos os valores são diferentes ao valor comparado. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.NotAll``1(System.Double,``0[],System.String,System.String)">
            <summary>
            Verifica se todos os valores são diferentes ao valor comparado.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNull(System.Nullable{System.Double},System.String)">
            <summary>
            Valida se o valor é nulo. Com a mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Nome da propriedade.</param>
            <returns>Contrato.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNull(System.Nullable{System.Double},System.String,System.String)">
            <summary>
            Valida se o valor é nulo.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Nome da propriedade.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotNull(System.Nullable{System.Double},System.String)">
            <summary>
            Valida se o valor não é nulo. Com a mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Nome da propriedade.</param>
            <returns>Contrato.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotNull(System.Nullable{System.Double},System.String,System.String)">
            <summary>
            Valida se o valor é nulo.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Nome da propriedade.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsEmail(System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de Email. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsEmail(System.String,System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de Email.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsEmailOrEmpty(System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de Email ou vazio. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsEmailOrEmpty(System.String,System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de Email ou vazio.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsEmailDomain(System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de Domínio de Email. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsEmailDomain(System.String,System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de Domínio de Email.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsEmailDomainOrEmpty(System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de Domínio de Email ou vazio. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsEmailDomainOrEmpty(System.String,System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de Domínio de Email ou vazio.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.FloatFormat(System.Single)">
            <summary>
            Função para formatar para tipo float.
            </summary>
            <param name="value">Valor a ser formatado.</param>
            <returns>Valor formatado.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.ConvertToFloat``1(``0)">
            <summary>
            Função para converter para float.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser convertido.</param>
            <returns>Valor convertido.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.Validate(System.Single,System.Single,System.String,System.String,System.Func{System.Single,System.Single,System.Boolean})">
            <summary>
            Função para validar condição.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <param name="condition">Condição a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.Validate``1(System.Single,``0,System.String,System.String,System.Func{System.Single,System.Single,System.Boolean})">
            <summary>
            Função para validar condição.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <param name="condition">Condição a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.ValidateList(System.Single,System.Single[],System.String,System.String,System.Func{System.Single,System.Single[],System.Boolean})">
            <summary>
            Função para validar lista de condição.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista a ser comparada.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <param name="condition">Condição a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.ValidateList``1(System.Single,``0[],System.String,System.String,System.Func{System.Single,System.Single[],System.Boolean})">
            <summary>
            Função para validar lista de condição.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista a ser comparada.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <param name="condition">Condição a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsGreater``1(System.Single,``0,System.String)">
            <summary>
            Verifica se o valor é maior que o valor comparado. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsGreater``1(System.Single,``0,System.String,System.String)">
            <summary>
            Verifica se o valor é maior que o valor comparado.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsGreaterOrEquals``1(System.Single,``0,System.String)">
            <summary>
            Verifica se o valor é maior ou igual ao valor comparado. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsGreaterOrEquals``1(System.Single,``0,System.String,System.String)">
            <summary>
            Verifica se o valor é maior ou igual ao valor comparado.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsLower``1(System.Single,``0,System.String)">
            <summary>
            Verifica se o valor é menor que o valor comparado. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsLower``1(System.Single,``0,System.String,System.String)">
            <summary>
            Verifica se o valor é menor que o valor comparado.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsLowerOrEquals``1(System.Single,``0,System.String)">
            <summary>
            Verifica se o valor é menor ou igual ao valor comparado. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsLowerOrEquals``1(System.Single,``0,System.String,System.String)">
            <summary>
            Verifica se o valor é menor ou igual ao valor comparado.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsBetween``1(System.Single,``0,``0,System.String)">
            <summary>
            Verifica se o valor é entre os valores comparados. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="start">Valor inicial.</param>
            <param name="end">Valor final.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsBetween``1(System.Single,``0,``0,System.String,System.String)">
            <summary>
            Verifica se o valor é entre os valores comparados
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="start">Valor inicial.</param>
            <param name="end">Valor final.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotBetween``1(System.Single,``0,``0,System.String)">
            <summary>
            Verifica se o valor não é entre os valores comparados. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="start">Valor inicial.</param>
            <param name="end">Valor final.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotBetween``1(System.Single,``0,``0,System.String,System.String)">
            <summary>
            Verifica se o valor não é entre os valores comparados
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="start">Valor inicial.</param>
            <param name="end">Valor final.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsMin(System.Single,System.String)">
            <summary>
            Verifica se o valor é igual ao valor mínimo do tipo. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsMin(System.Single,System.String,System.String)">
            <summary>
            Verifica se o valor é igual ao valor mínimo do tipo.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotMin(System.Single,System.String)">
            <summary>
            Verifica se o valor é não igual ao valor mínimo do tipo. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotMin(System.Single,System.String,System.String)">
            <summary>
            Verifica se o valor é não igual ao valor mínimo do tipo.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsMax(System.Single,System.String)">
            <summary>
            Verifica se o valor é igual ao valor máximo do tipo. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsMax(System.Single,System.String,System.String)">
            <summary>
            Verifica se o valor é igual ao valor máximo do tipo.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotMax(System.Single,System.String)">
            <summary>
            Verifica se o valor é não igual ao valor máximo do tipo. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotMax(System.Single,System.String,System.String)">
            <summary>
            Verifica se o valor é não igual ao valor máximo do tipo.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.AreEquals``1(System.Single,``0,System.String)">
            <summary>
            Verifica se o valor é igual ao valor comparado. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.AreEquals``1(System.Single,``0,System.String,System.String)">
            <summary>
            Verifica se o valor é igual ao valor comparado.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.AreNotEquals``1(System.Single,``0,System.String)">
            <summary>
            Verifica se o valor não é igual ao valor comparado. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.AreNotEquals``1(System.Single,``0,System.String,System.String)">
            <summary>
            Verifica se o valor não é igual ao valor comparado.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.Contains``1(System.Single,``0[],System.String)">
            <summary>
            Verifica se contém o valor na lista. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.Contains``1(System.Single,``0[],System.String,System.String)">
            <summary>
            Verifica se contém o valor na lista.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.NotContains``1(System.Single,``0[],System.String)">
            <summary>
            Verifica se não contém o valor na lista. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.NotContains``1(System.Single,``0[],System.String,System.String)">
            <summary>
            Verifica se não contém o valor na lista.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.All``1(System.Single,``0[],System.String)">
            <summary>
            Verifica se todos os valores são iguais ao valor comparado. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.All``1(System.Single,``0[],System.String,System.String)">
            <summary>
            Verifica se todos os valores são iguais ao valor comparado.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.NotAll``1(System.Single,``0[],System.String)">
            <summary>
            Verifica se todos os valores são diferentes ao valor comparado. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.NotAll``1(System.Single,``0[],System.String,System.String)">
            <summary>
            Verifica se todos os valores são diferentes ao valor comparado.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNull(System.Nullable{System.Single},System.String)">
            <summary>
            Valida se o valor é nulo. Com a mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Nome da propriedade.</param>
            <returns>Contrato.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNull(System.Nullable{System.Single},System.String,System.String)">
            <summary>
            Valida se o valor é nulo.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Nome da propriedade.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotNull(System.Nullable{System.Single},System.String)">
            <summary>
            Valida se o valor não é nulo. Com a mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Nome da propriedade.</param>
            <returns>Contrato.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotNull(System.Nullable{System.Single},System.String,System.String)">
            <summary>
            Valida se o valor é nulo.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Nome da propriedade.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.GuidFormat(System.Guid)">
            <summary>
            Função para formatar para tipo Guid.
            </summary>
            <param name="value">Valor a ser formatado.</param>
            <returns>Valor formatado.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.Validate(System.Guid,System.Guid,System.String,System.String,System.Func{System.Guid,System.Guid,System.Boolean})">
            <summary>
            Função para validar condição.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <param name="condition">Condição a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.ValidateList(System.Guid,System.Guid[],System.String,System.String,System.Func{System.Guid,System.Guid[],System.Boolean})">
            <summary>
            Função para validar lista de condição.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista a ser comparada.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <param name="condition">Condição a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.AreEquals(System.Guid,System.Guid,System.String)">
            <summary>
            Verifica se o valor é igual ao valor comparado. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.AreEquals(System.Guid,System.Guid,System.String,System.String)">
            <summary>
            Verifica se o valor é igual ao valor comparado.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.AreNotEquals(System.Guid,System.Guid,System.String)">
            <summary>
            Verifica se o valor não é igual ao valor comparado. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.AreNotEquals(System.Guid,System.Guid,System.String,System.String)">
            <summary>
            Verifica se o valor não é igual ao valor comparado.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.Contains(System.Guid,System.Guid[],System.String)">
            <summary>
            Verifica se contém o valor na lista. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.Contains(System.Guid,System.Guid[],System.String,System.String)">
            <summary>
            Verifica se contém o valor na lista.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.NotContains(System.Guid,System.Guid[],System.String)">
            <summary>
            Verifica se não contém o valor na lista. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.NotContains(System.Guid,System.Guid[],System.String,System.String)">
            <summary>
            Verifica se não contém o valor na lista.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.All(System.Guid,System.Guid[],System.String)">
            <summary>
            Verifica se todos os valores são iguais ao valor comparado. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.All(System.Guid,System.Guid[],System.String,System.String)">
            <summary>
            Verifica se todos os valores são iguais ao valor comparado.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.NotAll(System.Guid,System.Guid[],System.String)">
            <summary>
            Verifica se todos os valores são diferentes ao valor comparado. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.NotAll(System.Guid,System.Guid[],System.String,System.String)">
            <summary>
            Verifica se todos os valores são diferentes ao valor comparado.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNull(System.Nullable{System.Guid},System.String)">
            <summary>
            Valida se o valor é nulo. Com a mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Nome da propriedade.</param>
            <returns>Contrato.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNull(System.Nullable{System.Guid},System.String,System.String)">
            <summary>
            Valida se o valor é nulo.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Nome da propriedade.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotNull(System.Nullable{System.Guid},System.String)">
            <summary>
            Valida se o valor não é nulo. Com a mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Nome da propriedade.</param>
            <returns>Contrato.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotNull(System.Nullable{System.Guid},System.String,System.String)">
            <summary>
            Valida se o valor é nulo.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Nome da propriedade.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsEmpty(System.Nullable{System.Guid},System.String)">
            <summary>
            Valida se o valor é vazio. Com a mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Nome da propriedade.</param>
            <returns>Contrato.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsEmpty(System.Nullable{System.Guid},System.String,System.String)">
            <summary>
            Valida se o valor é vazio.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Nome da propriedade.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotEmpty(System.Nullable{System.Guid},System.String)">
            <summary>
            Valida se o valor não é nulo. Com a mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Nome da propriedade.</param>
            <returns>Contrato.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotEmpty(System.Nullable{System.Guid},System.String,System.String)">
            <summary>
            Valida se o valor é nulo.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Nome da propriedade.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IntFormat(System.Int32)">
            <summary>
            Função para formatar para tipo int.
            </summary>
            <param name="value">Valor a ser formatado.</param>
            <returns>Valor formatado.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.ConvertToInt``1(``0)">
            <summary>
            Função para converter para int.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser convertido.</param>
            <returns>Valor convertido.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.Validate(System.Int32,System.Int32,System.String,System.String,System.Func{System.Int32,System.Int32,System.Boolean})">
            <summary>
            Função para validar condição.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <param name="condition">Condição a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.Validate``1(System.Int32,``0,System.String,System.String,System.Func{System.Int32,System.Int32,System.Boolean})">
            <summary>
            Função para validar condição.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <param name="condition">Condição a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.ValidateList(System.Int32,System.Int32[],System.String,System.String,System.Func{System.Int32,System.Int32[],System.Boolean})">
            <summary>
            Função para validar lista de condição.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista a ser comparada.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <param name="condition">Condição a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.ValidateList``1(System.Int32,``0[],System.String,System.String,System.Func{System.Int32,System.Int32[],System.Boolean})">
            <summary>
            Função para validar lista de condição.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista a ser comparada.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <param name="condition">Condição a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsGreater``1(System.Int32,``0,System.String)">
            <summary>
            Verifica se o valor é maior que o valor comparado. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsGreater``1(System.Int32,``0,System.String,System.String)">
            <summary>
            Verifica se o valor é maior que o valor comparado.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsGreaterOrEquals``1(System.Int32,``0,System.String)">
            <summary>
            Verifica se o valor é maior ou igual ao valor comparado. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsGreaterOrEquals``1(System.Int32,``0,System.String,System.String)">
            <summary>
            Verifica se o valor é maior ou igual ao valor comparado.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsLower``1(System.Int32,``0,System.String)">
            <summary>
            Verifica se o valor é menor que o valor comparado. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsLower``1(System.Int32,``0,System.String,System.String)">
            <summary>
            Verifica se o valor é menor que o valor comparado.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsLowerOrEquals``1(System.Int32,``0,System.String)">
            <summary>
            Verifica se o valor é menor ou igual ao valor comparado. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsLowerOrEquals``1(System.Int32,``0,System.String,System.String)">
            <summary>
            Verifica se o valor é menor ou igual ao valor comparado.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsBetween``1(System.Int32,``0,``0,System.String)">
            <summary>
            Verifica se o valor é entre os valores comparados. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="start">Valor inicial.</param>
            <param name="end">Valor final.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsBetween``1(System.Int32,``0,``0,System.String,System.String)">
            <summary>
            Verifica se o valor é entre os valores comparados
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="start">Valor inicial.</param>
            <param name="end">Valor final.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotBetween``1(System.Int32,``0,``0,System.String)">
            <summary>
            Verifica se o valor não é entre os valores comparados. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="start">Valor inicial.</param>
            <param name="end">Valor final.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotBetween``1(System.Int32,``0,``0,System.String,System.String)">
            <summary>
            Verifica se o valor não é entre os valores comparados
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="start">Valor inicial.</param>
            <param name="end">Valor final.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsMin(System.Int32,System.String)">
            <summary>
            Verifica se o valor é igual ao valor mínimo do tipo. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsMin(System.Int32,System.String,System.String)">
            <summary>
            Verifica se o valor é igual ao valor mínimo do tipo.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotMin(System.Int32,System.String)">
            <summary>
            Verifica se o valor é não igual ao valor mínimo do tipo. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotMin(System.Int32,System.String,System.String)">
            <summary>
            Verifica se o valor é não igual ao valor mínimo do tipo.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsMax(System.Int32,System.String)">
            <summary>
            Verifica se o valor é igual ao valor máximo do tipo. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsMax(System.Int32,System.String,System.String)">
            <summary>
            Verifica se o valor é igual ao valor máximo do tipo.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotMax(System.Int32,System.String)">
            <summary>
            Verifica se o valor é não igual ao valor máximo do tipo. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotMax(System.Int32,System.String,System.String)">
            <summary>
            Verifica se o valor é não igual ao valor máximo do tipo.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.AreEquals``1(System.Int32,``0,System.String)">
            <summary>
            Verifica se o valor é igual ao valor comparado. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>  
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.AreEquals``1(System.Int32,``0,System.String,System.String)">
            <summary>
            Verifica se o valor é igual ao valor comparado.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.AreNotEquals``1(System.Int32,``0,System.String)">
            <summary>
            Verifica se o valor não é igual ao valor comparado. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.AreNotEquals``1(System.Int32,``0,System.String,System.String)">
            <summary>
            Verifica se o valor não é igual ao valor comparado.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.Contains``1(System.Int32,``0[],System.String)">
            <summary>
            Verifica se contém o valor na lista. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.Contains``1(System.Int32,``0[],System.String,System.String)">
            <summary>
            Verifica se contém o valor na lista.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.NotContains``1(System.Int32,``0[],System.String)">
            <summary>
            Verifica se não contém o valor na lista. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.NotContains``1(System.Int32,``0[],System.String,System.String)">
            <summary>
            Verifica se não contém o valor na lista.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.All``1(System.Int32,``0[],System.String)">
            <summary>
            Verifica se todos os valores são iguais ao valor comparado. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.All``1(System.Int32,``0[],System.String,System.String)">
            <summary>
            Verifica se todos os valores são iguais ao valor comparado.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.NotAll``1(System.Int32,``0[],System.String)">
            <summary>
            Verifica se todos os valores são diferentes ao valor comparado. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.NotAll``1(System.Int32,``0[],System.String,System.String)">
            <summary>
            Verifica se todos os valores são diferentes ao valor comparado.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNull(System.Nullable{System.Int32},System.String)">
            <summary>
            Valida se o valor é nulo. Com a mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Nome da propriedade.</param>
            <returns>Contrato.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNull(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Valida se o valor é nulo.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Nome da propriedade.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotNull(System.Nullable{System.Int32},System.String)">
            <summary>
            Valida se o valor não é nulo. Com a mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Nome da propriedade.</param>
            <returns>Contrato.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotNull(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Valida se o valor é nulo.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Nome da propriedade.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.Validate``1(``0[],System.Int32,System.String,System.String,System.Func{``0[],System.Int32,System.Boolean})">
            <summary>
            Função para validar condição.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="list">Lista a ser validada.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <param name="condition">Condição a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.ValidateList``1(``0[],``0[],System.String,System.String,System.Func{``0[],``0[],System.Boolean})">
            <summary>
            Função para validar lista de condição.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="list">Lista a ser validada.</param>
            <param name="comparer">Lista a ser comparada.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <param name="condition">Condição a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsGreater``1(``0[],System.Int32,System.String)">
            <summary>
            Verifica se o tamanho da lista é maior que o valor comparado. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="list">Lista a ser validada.</param>
            <param name="comparer">Tamanho a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsGreater``1(``0[],System.Int32,System.String,System.String)">
            <summary>
            Verifica se o tamanho da lista é maior que o valor comparado.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="list">Lista a ser validada.</param>
            <param name="comparer">Tamanho a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsGreaterOrEquals``1(``0[],System.Int32,System.String)">
            <summary>
            Verifica se o tamanho da lista é maior ou igual que o valor comparado. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="list">Lista a ser validada.</param>
            <param name="comparer">Tamanho a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsGreaterOrEquals``1(``0[],System.Int32,System.String,System.String)">
            <summary>
            Verifica se o tamanho da lista é maior ou igual que o valor comparado.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="list">Lista a ser validada.</param>
            <param name="comparer">Tamanho a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsLower``1(``0[],System.Int32,System.String)">
            <summary>
            Verifica se o tamanho da lista é menor que o valor comparado. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="list">Lista a ser validada.</param>
            <param name="comparer">Tamanho a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsLower``1(``0[],System.Int32,System.String,System.String)">
            <summary>
            Verifica se o tamanho da lista é menor que o valor comparado.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="list">Lista a ser validada.</param>
            <param name="comparer">Tamanho a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsLowerOrEquals``1(``0[],System.Int32,System.String)">
            <summary>
            Verifica se o tamanho da lista é menor ou igual que o valor comparado. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="list">Lista a ser validada.</param>
            <param name="comparer">Tamanho a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsLowerOrEquals``1(``0[],System.Int32,System.String,System.String)">
            <summary>
            Verifica se o tamanho da lista é menor ou igual que o valor comparado.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="list">Lista a ser validada.</param>
            <param name="comparer">Tamanho a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.AreEquals``1(``0[],``0[],System.String)">
            <summary>
            Verifica se a lista é igual a lista comparada. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="list">Lista a ser validada.</param>
            <param name="comparer">Lista a ser comparada.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.AreEquals``1(``0[],``0[],System.String,System.String)">
            <summary>
            Verifica se a lista é igual a lista comparada. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="list">Lista a ser validada.</param>
            <param name="comparer">Lista a ser comparada.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.AreNotEquals``1(``0[],``0[],System.String)">
            <summary>
            Verifica se a lista não é igual a lista comparada. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="list">Lista a ser validada.</param>
            <param name="comparer">Lista a ser comparada.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.AreNotEquals``1(``0[],``0[],System.String,System.String)">
            <summary>
            Verifica se a lista não é igual a lista comparada. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="list">Lista a ser validada.</param>
            <param name="comparer">Lista a ser comparada.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNull``1(``0[],System.String)">
            <summary>
            Valida se a lista é nula. Com a mensagem padrão.
            </summary>
            <param name="list">Lista a ser validada.</param>
            <param name="property">Nome da propriedade.</param>
            <returns>Contrato.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNull``1(``0[],System.String,System.String)">
            <summary>
            Valida se a lista é nula.
            </summary>
            <param name="list">Lista a ser validada.</param>
            <param name="property">Nome da propriedade.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotNull``1(``0[],System.String)">
            <summary>
            Valida se a lista não é nula. Com a mensagem padrão.
            </summary>
            <param name="list">Lista a ser validada.</param>
            <param name="property">Nome da propriedade.</param>
            <returns>Contrato.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotNull``1(``0[],System.String,System.String)">
            <summary>
            Valida se a lista não é nula.
            </summary>
            <param name="list">Lista a ser validada.</param>
            <param name="property">Nome da propriedade.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsEmpty``1(``0[],System.String)">
            <summary>
            Valida se a lista é vazia. Com a mensagem padrão.
            </summary>
            <param name="list">Lista a ser validada.</param>
            <param name="property">Nome da propriedade.</param>
            <returns>Contrato.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsEmpty``1(``0[],System.String,System.String)">
            <summary>
            Valida se a lista é vazia.
            </summary>
            <param name="list">Lista a ser validada.</param>
            <param name="property">Nome da propriedade.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotEmpty``1(``0[],System.String)">
            <summary>
            Valida se a lista não é vazia. Com a mensagem padrão.
            </summary>
            <param name="list">Lista a ser validada.</param>
            <param name="property">Nome da propriedade.</param>
            <returns>Contrato.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotEmpty``1(``0[],System.String,System.String)">
            <summary>
            Valida se a lista não é vazia.
            </summary>
            <param name="list">Lista a ser validada.</param>
            <param name="property">Nome da propriedade.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.LongFormat(System.Int64)">
            <summary>
            Função para formatar para tipo long.
            </summary>
            <param name="value">Valor a ser formatado.</param>
            <returns>Valor formatado.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.ConvertToLong``1(``0)">
            <summary>
            Função para converter para long.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser convertido.</param>
            <returns>Valor convertido.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.Validate(System.Int64,System.Int64,System.String,System.String,System.Func{System.Int64,System.Int64,System.Boolean})">
            <summary>
            Função para validar condição.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <param name="condition">Condição a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.Validate``1(System.Int64,``0,System.String,System.String,System.Func{System.Int64,System.Int64,System.Boolean})">
            <summary>
            Função para validar condição.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <param name="condition">Condição a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.ValidateList(System.Int64,System.Int64[],System.String,System.String,System.Func{System.Int64,System.Int64[],System.Boolean})">
            <summary>
            Função para validar lista de condição.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista a ser comparada.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <param name="condition">Condição a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.ValidateList``1(System.Int64,``0[],System.String,System.String,System.Func{System.Int64,System.Int64[],System.Boolean})">
            <summary>
            Função para validar lista de condição.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista a ser comparada.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <param name="condition">Condição a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsGreater``1(System.Int64,``0,System.String)">
            <summary>
            Verifica se o valor é maior que o valor comparado. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsGreater``1(System.Int64,``0,System.String,System.String)">
            <summary>
            Verifica se o valor é maior que o valor comparado.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsGreaterOrEquals``1(System.Int64,``0,System.String)">
            <summary>
            Verifica se o valor é maior ou igual ao valor comparado. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsGreaterOrEquals``1(System.Int64,``0,System.String,System.String)">
            <summary>
            Verifica se o valor é maior ou igual ao valor comparado.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsLower``1(System.Int64,``0,System.String)">
            <summary>
            Verifica se o valor é menor que o valor comparado. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsLower``1(System.Int64,``0,System.String,System.String)">
            <summary>
            Verifica se o valor é menor que o valor comparado.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsLowerOrEquals``1(System.Int64,``0,System.String)">
            <summary>
            Verifica se o valor é menor ou igual ao valor comparado. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsLowerOrEquals``1(System.Int64,``0,System.String,System.String)">
            <summary>
            Verifica se o valor é menor ou igual ao valor comparado.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsBetween``1(System.Int64,``0,``0,System.String)">
            <summary>
            Verifica se o valor é entre os valores comparados. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="start">Valor inicial.</param>
            <param name="end">Valor final.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsBetween``1(System.Int64,``0,``0,System.String,System.String)">
            <summary>
            Verifica se o valor é entre os valores comparados
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="start">Valor inicial.</param>
            <param name="end">Valor final.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotBetween``1(System.Int64,``0,``0,System.String)">
            <summary>
            Verifica se o valor não é entre os valores comparados. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="start">Valor inicial.</param>
            <param name="end">Valor final.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotBetween``1(System.Int64,``0,``0,System.String,System.String)">
            <summary>
            Verifica se o valor não é entre os valores comparados
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="start">Valor inicial.</param>
            <param name="end">Valor final.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsMin(System.Int64,System.String)">
            <summary>
            Verifica se o valor é igual ao valor mínimo do tipo. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsMin(System.Int64,System.String,System.String)">
            <summary>
            Verifica se o valor é igual ao valor mínimo do tipo.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotMin(System.Int64,System.String)">
            <summary>
            Verifica se o valor é não igual ao valor mínimo do tipo. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotMin(System.Int64,System.String,System.String)">
            <summary>
            Verifica se o valor é não igual ao valor mínimo do tipo.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsMax(System.Int64,System.String)">
            <summary>
            Verifica se o valor é igual ao valor máximo do tipo. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsMax(System.Int64,System.String,System.String)">
            <summary>
            Verifica se o valor é igual ao valor máximo do tipo.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotMax(System.Int64,System.String)">
            <summary>
            Verifica se o valor é não igual ao valor máximo do tipo. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotMax(System.Int64,System.String,System.String)">
            <summary>
            Verifica se o valor é não igual ao valor máximo do tipo.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.AreEquals``1(System.Int64,``0,System.String)">
            <summary>
            Verifica se o valor é igual ao valor comparado. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.AreEquals``1(System.Int64,``0,System.String,System.String)">
            <summary>
            Verifica se o valor é igual ao valor comparado.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.AreNotEquals``1(System.Int64,``0,System.String)">
            <summary>
            Verifica se o valor não é igual ao valor comparado. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.AreNotEquals``1(System.Int64,``0,System.String,System.String)">
            <summary>
            Verifica se o valor não é igual ao valor comparado.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.Contains``1(System.Int64,``0[],System.String)">
            <summary>
            Verifica se contém o valor na lista. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.Contains``1(System.Int64,``0[],System.String,System.String)">
            <summary>
            Verifica se contém o valor na lista.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.NotContains``1(System.Int64,``0[],System.String)">
            <summary>
            Verifica se não contém o valor na lista. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.NotContains``1(System.Int64,``0[],System.String,System.String)">
            <summary>
            Verifica se não contém o valor na lista.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.All``1(System.Int64,``0[],System.String)">
            <summary>
            Verifica se todos os valores são iguais ao valor comparado. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.All``1(System.Int64,``0[],System.String,System.String)">
            <summary>
            Verifica se todos os valores são iguais ao valor comparado.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.NotAll``1(System.Int64,``0[],System.String)">
            <summary>
            Verifica se todos os valores são diferentes ao valor comparado. Com mensagem padrão.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.NotAll``1(System.Int64,``0[],System.String,System.String)">
            <summary>
            Verifica se todos os valores são diferentes ao valor comparado.
            </summary>
            <typeparam name="T">Tipo a ser convertido.</typeparam>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNull(System.Nullable{System.Int64},System.String)">
            <summary>
            Valida se o valor é nulo. Com a mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Nome da propriedade.</param>
            <returns>Contrato.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNull(System.Nullable{System.Int64},System.String,System.String)">
            <summary>
            Valida se o valor é nulo.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Nome da propriedade.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotNull(System.Nullable{System.Int64},System.String)">
            <summary>
            Valida se o valor não é nulo. Com a mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Nome da propriedade.</param>
            <returns>Contrato.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotNull(System.Nullable{System.Int64},System.String,System.String)">
            <summary>
            Valida se o valor é nulo.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Nome da propriedade.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsIp(System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de IP. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsIp(System.String,System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de IP.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsIpv4(System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de Ipv4. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsIpv4(System.String,System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de Ipv4.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsIpv6(System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de Ipv6. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsIpv6(System.String,System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de Ipv6.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsMacAddress(System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de Mac Address. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsMacAddress(System.String,System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de Mac Address.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.ObjectFormat(System.Object)">
            <summary>
            Função para formatar para tipo object.
            </summary>
            <param name="value">Valor a ser formatado.</param>
            <returns>Valor formatado.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.Validate(System.Object,System.Object,System.String,System.String,System.Func{System.Object,System.Object,System.Boolean})">
            <summary>
            Função para validar condição.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <param name="condition">Condição a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.AreEquals(System.Object,System.Object,System.String)">
            <summary>
            Verifica se o valor é igual ao valor comparado. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.AreEquals(System.Object,System.Object,System.String,System.String)">
            <summary>
            Verifica se o valor é igual ao valor comparado.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.AreNotEquals(System.Object,System.Object,System.String)">
            <summary>
            Verifica se o valor não é igual ao valor comparado. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.AreNotEquals(System.Object,System.Object,System.String,System.String)">
            <summary>
            Verifica se o valor não é igual ao valor comparado.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNull(System.Object,System.String)">
            <summary>
            Valida se o valor é nulo. Com a mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Nome da propriedade.</param>
            <returns>Contrato.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNull(System.Object,System.String,System.String)">
            <summary>
            Valida se o valor é nulo.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Nome da propriedade.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotNull(System.Object,System.String)">
            <summary>
            Valida se o valor não é nulo. Com a mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Nome da propriedade.</param>
            <returns>Contrato.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotNull(System.Object,System.String,System.String)">
            <summary>
            Valida se o valor é nulo.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Nome da propriedade.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsUrl(System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de URL. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsUrl(System.String,System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de URL.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsFtp(System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de FTP. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsFtp(System.String,System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de FTP.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsSftp(System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de SFTP. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsSftp(System.String,System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de SFTP.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsProtocolFtp(System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de Protocolo FTP. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsProtocolFtp(System.String,System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de Protocolo FTP.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsHttp(System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de HTTP. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsHttp(System.String,System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de HTTP.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsHttps(System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de HTTPS. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsHttps(System.String,System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de HTTPS.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsProtocolHttp(System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de Protocolo HTTP. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsProtocolHttp(System.String,System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de Protocolo HTTP.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsImap(System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de IMAP. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsImap(System.String,System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de IMAP.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsPop3(System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato POP3. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsPop3(System.String,System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato POP3.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsProtocolEmailReceiver(System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de Protocolo de Recebimento de Email. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsProtocolEmailReceiver(System.String,System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de ProtocolEmailReceiver.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsSmtp(System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de SMTP. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsSmtp(System.String,System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de SMTP.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsProtocolEmailSender(System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de Protocolo de Envio de Email. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsProtocolEmailSender(System.String,System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de Protocolo de Envio de Email.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsWs(System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de WS. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsWs(System.String,System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de WS.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsWss(System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de WSS. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsWss(System.String,System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de WSS.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsProtocolWebSocket(System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de Protocolo Web Socket. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsProtocolWebSocket(System.String,System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de Protocolo Web Socket.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="F:Tooark.Validations.Contract.MatchFunc">
            <summary>
            Função para validar condição de correspondência.
            </summary>
            <remarks>value: Valor a ser validado.</remarks>
            <remarks>pattern: Padrão a ser comparado.</remarks>
            <remarks>options: Opções de regex para Case Sensitive.</remarks>
            <remarks>timeout: Tempo limite para validação. Em milissegundos.</remarks>
            <returns>Função de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.Validate(System.String,System.String,System.Func{System.Boolean})">
            <summary>
            Função para validar condição.
            </summary>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <param name="condition">Condição a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.Match(System.String,System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao padrão. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="pattern">Padrão a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.Match(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            Verifica se o valor corresponde ao padrão. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="pattern">Padrão a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="options">Opções de regex para Case Sensitive.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.Match(System.String,System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.Int32)">
            <summary>
            Verifica se o valor corresponde ao padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="pattern">Padrão a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <param name="options">Opções de regex para Case Sensitive. Parâmetro opcional. Padrão RegexOptions.None.</param>
            <param name="timeout">Tempo limite para validação. Em milissegundos. Parâmetro opcional. Padrão 300.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.NotMatch(System.String,System.String,System.String)">
            <summary>
            Verifica se o valor não corresponde ao padrão. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="pattern">Padrão a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.NotMatch(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            Verifica se o valor não corresponde ao padrão. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="pattern">Padrão a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="options">Opções de regex para Case Sensitive.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.NotMatch(System.String,System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.Int32)">
            <summary>
            Verifica se o valor não corresponde ao padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="pattern">Padrão a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <param name="options">Opções de regex para Case Sensitive. Parâmetro opcional. Padrão RegexOptions.None.</param>
            <param name="timeout">Tempo limite para validação. Em milissegundos. Parâmetro opcional. Padrão 300.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.ConvertToString(System.Int32)">
            <summary>
            Função para converter para string.
            </summary>
            <param name="value">Valor a ser convertido.</param>
            <returns>Valor convertido.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.Validate(System.String,System.Int32,System.String,System.String,System.Func{System.String,System.Int32,System.Boolean})">
            <summary>
            Função para validar condição.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <param name="condition">Condição a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.Validate(System.String,System.String,System.String,System.String,System.Func{System.String,System.String,System.Boolean})">
            <summary>
            Função para validar condição.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <param name="condition">Condição a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.ValidateList(System.String,System.String[],System.String,System.String,System.Func{System.String,System.String[],System.Boolean})">
            <summary>
            Função para validar lista de condição.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista a ser comparada.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <param name="condition">Condição a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsGreater(System.String,System.Int32,System.String)">
            <summary>
            Verifica se o tamanho do valor é maior que o valor comparado. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Tamanho a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsGreater(System.String,System.Int32,System.String,System.String)">
            <summary>
            Verifica se o tamanho do valor é maior que o valor comparado.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Tamanho a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsGreaterOrEquals(System.String,System.Int32,System.String)">
            <summary>
            Verifica se o tamanho do valor é maior ou igual ao valor comparado. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Tamanho a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsGreaterOrEquals(System.String,System.Int32,System.String,System.String)">
            <summary>
            Verifica se o tamanho do valor é maior ou igual ao valor comparado.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Tamanho a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsLower(System.String,System.Int32,System.String)">
            <summary>
            Verifica se o tamanho do valor é menor que o valor comparado. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Tamanho a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsLower(System.String,System.Int32,System.String,System.String)">
            <summary>
            Verifica se o tamanho do valor é menor que o valor comparado.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Tamanho a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsLowerOrEquals(System.String,System.Int32,System.String)">
            <summary>
            Verifica se o tamanho do valor é menor ou igual ao valor comparado. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Tamanho a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsLowerOrEquals(System.String,System.Int32,System.String,System.String)">
            <summary>
            Verifica se o tamanho do valor é menor ou igual ao valor comparado.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Tamanho a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsBetween(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            Verifica se o tamanho do valor é entre os valores comparados. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="start">Valor inicial.</param>
            <param name="end">Valor final.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsBetween(System.String,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Verifica se o tamanho do valor é entre os valores comparados
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="start">Valor inicial.</param>
            <param name="end">Valor final.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotBetween(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            Verifica se o tamanho do valor não é entre os valores comparados. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="start">Valor inicial.</param>
            <param name="end">Valor final.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotBetween(System.String,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Verifica se o tamanho do valor não é entre os valores comparados
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="start">Valor inicial.</param>
            <param name="end">Valor final.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.AreEquals(System.String,System.String,System.String)">
            <summary>
            Verifica se o valor é igual ao valor comparado. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.AreEquals(System.String,System.String,System.String,System.String)">
            <summary>
            Verifica se o valor é igual ao valor comparado.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.AreEquals(System.String,System.Int32,System.String)">
            <summary>
            Verifica se o tamanho valor é igual ao valor comparado. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Tamanho a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.AreEquals(System.String,System.Int32,System.String,System.String)">
            <summary>
            Verifica se o tamanho valor é igual ao valor comparado.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Tamanho a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.AreNotEquals(System.String,System.String,System.String)">
            <summary>
            Verifica se o valor não é igual ao valor comparado. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.AreNotEquals(System.String,System.String,System.String,System.String)">
            <summary>
            Verifica se o valor não é igual ao valor comparado.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.AreNotEquals(System.String,System.Int32,System.String)">
            <summary>
            Verifica se o tamanho valor não é igual ao valor comparado. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Tamanho a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.AreNotEquals(System.String,System.Int32,System.String,System.String)">
            <summary>
            Verifica se o tamanho valor não é igual ao valor comparado.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Tamanho a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.Contains(System.String,System.String,System.String)">
            <summary>
            Verifica se o valor está contido dentro do valor comparado. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.Contains(System.String,System.String,System.String,System.String)">
            <summary>
            Verifica se o valor está contido dentro do valor comparado.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.Contains(System.String,System.String[],System.String)">
            <summary>
            Verifica se contém o valor na lista. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.Contains(System.String,System.String[],System.String,System.String)">
            <summary>
            Verifica se contém o valor na lista.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.NotContains(System.String,System.String,System.String)">
            <summary>
            Verifica se o valor não está contido dentro do valor comparado. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.NotContains(System.String,System.String,System.String,System.String)">
            <summary>
            Verifica se o valor não está contido dentro do valor comparado.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.NotContains(System.String,System.String[],System.String)">
            <summary>
            Verifica se não contém o valor na lista. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.NotContains(System.String,System.String[],System.String,System.String)">
            <summary>
            Verifica se não contém o valor na lista.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNull(System.String,System.String)">
            <summary>
            Valida se o valor é nulo. Com a mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Nome da propriedade.</param>
            <returns>Contrato.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNull(System.String,System.String,System.String)">
            <summary>
            Valida se o valor é nulo.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Nome da propriedade.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotNull(System.String,System.String)">
            <summary>
            Valida se o valor não é nulo. Com a mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Nome da propriedade.</param>
            <returns>Contrato.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotNull(System.String,System.String,System.String)">
            <summary>
            Valida se o valor é nulo.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Nome da propriedade.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNullOrEmpty(System.String,System.String)">
            <summary>
            Valida se o valor é nulo ou vazio. Com a mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Nome da propriedade.</param>
            <returns>Contrato.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNullOrEmpty(System.String,System.String,System.String)">
            <summary>
            Valida se o valor é nulo ou vazio.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Nome da propriedade.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotNullOrEmpty(System.String,System.String)">
            <summary>
            Valida se o valor não é nulo nem vazio. Com a mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Nome da propriedade.</param>
            <returns>Contrato.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotNullOrEmpty(System.String,System.String,System.String)">
            <summary>
            Valida se o valor não é nulo nem vazio.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Nome da propriedade.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNullOrWhiteSpace(System.String,System.String)">
            <summary>
            Valida se o valor é nulo ou espaço em branco. Com a mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Nome da propriedade.</param>
            <returns>Contrato.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNullOrWhiteSpace(System.String,System.String,System.String)">
            <summary>
            Valida se o valor é nulo ou espaço em branco.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Nome da propriedade.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotNullOrWhiteSpace(System.String,System.String)">
            <summary>
            Valida se o valor não é nulo nem espaço em branco. Com a mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Nome da propriedade.</param>
            <returns>Contrato.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotNullOrWhiteSpace(System.String,System.String,System.String)">
            <summary>
            Valida se o valor não é nulo nem espaço em branco.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Nome da propriedade.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.TimeSpanFormat(System.TimeSpan)">
            <summary>
            Função para formatar para tipo TimeSpan.
            </summary>
            <param name="value">Valor a ser formatado.</param>
            <returns>Valor formatado.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.Validate(System.TimeSpan,System.TimeSpan,System.String,System.String,System.Func{System.TimeSpan,System.TimeSpan,System.Boolean})">
            <summary>
            Função para validar condição.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <param name="condition">Condição a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.ValidateList(System.TimeSpan,System.TimeSpan[],System.String,System.String,System.Func{System.TimeSpan,System.TimeSpan[],System.Boolean})">
            <summary>
            Função para validar lista de condição.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista a ser comparada.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <param name="condition">Condição a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsGreater(System.TimeSpan,System.TimeSpan,System.String)">
            <summary>
            Verifica se o valor é maior que o valor comparado. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsGreater(System.TimeSpan,System.TimeSpan,System.String,System.String)">
            <summary>
            Verifica se o valor é maior que o valor comparado.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsGreaterOrEquals(System.TimeSpan,System.TimeSpan,System.String)">
            <summary>
            Verifica se o valor é maior ou igual ao valor comparado. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsGreaterOrEquals(System.TimeSpan,System.TimeSpan,System.String,System.String)">
            <summary>
            Verifica se o valor é maior ou igual ao valor comparado.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsLower(System.TimeSpan,System.TimeSpan,System.String)">
            <summary>
            Verifica se o valor é menor que o valor comparado. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsLower(System.TimeSpan,System.TimeSpan,System.String,System.String)">
            <summary>
            Verifica se o valor é menor que o valor comparado.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsLowerOrEquals(System.TimeSpan,System.TimeSpan,System.String)">
            <summary>
            Verifica se o valor é menor ou igual ao valor comparado. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsLowerOrEquals(System.TimeSpan,System.TimeSpan,System.String,System.String)">
            <summary>
            Verifica se o valor é menor ou igual ao valor comparado.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsBetween(System.TimeSpan,System.TimeSpan,System.TimeSpan,System.String)">
            <summary>
            Verifica se o valor é entre os valores comparados. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="start">Valor inicial.</param>
            <param name="end">Valor final.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsBetween(System.TimeSpan,System.TimeSpan,System.TimeSpan,System.String,System.String)">
            <summary>
            Verifica se o valor é entre os valores comparados
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="start">Valor inicial.</param>
            <param name="end">Valor final.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotBetween(System.TimeSpan,System.TimeSpan,System.TimeSpan,System.String)">
            <summary>
            Verifica se o valor não é entre os valores comparados. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="start">Valor inicial.</param>
            <param name="end">Valor final.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotBetween(System.TimeSpan,System.TimeSpan,System.TimeSpan,System.String,System.String)">
            <summary>
            Verifica se o valor não é entre os valores comparados
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="start">Valor inicial.</param>
            <param name="end">Valor final.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsMin(System.TimeSpan,System.String)">
            <summary>
            Verifica se o valor é igual ao valor mínimo do tipo. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsMin(System.TimeSpan,System.String,System.String)">
            <summary>
            Verifica se o valor é igual ao valor mínimo do tipo.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotMin(System.TimeSpan,System.String)">
            <summary>
            Verifica se o valor é não igual ao valor mínimo do tipo. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotMin(System.TimeSpan,System.String,System.String)">
            <summary>
            Verifica se o valor é não igual ao valor mínimo do tipo.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsMax(System.TimeSpan,System.String)">
            <summary>
            Verifica se o valor é igual ao valor máximo do tipo. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsMax(System.TimeSpan,System.String,System.String)">
            <summary>
            Verifica se o valor é igual ao valor máximo do tipo.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotMax(System.TimeSpan,System.String)">
            <summary>
            Verifica se o valor é não igual ao valor máximo do tipo. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotMax(System.TimeSpan,System.String,System.String)">
            <summary>
            Verifica se o valor é não igual ao valor máximo do tipo.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.AreEquals(System.TimeSpan,System.TimeSpan,System.String)">
            <summary>
            Verifica se o valor é igual ao valor comparado. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.AreEquals(System.TimeSpan,System.TimeSpan,System.String,System.String)">
            <summary>
            Verifica se o valor é igual ao valor comparado.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.AreNotEquals(System.TimeSpan,System.TimeSpan,System.String)">
            <summary>
            Verifica se o valor não é igual ao valor comparado. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.AreNotEquals(System.TimeSpan,System.TimeSpan,System.String,System.String)">
            <summary>
            Verifica se o valor não é igual ao valor comparado.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="comparer">Valor a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.Contains(System.TimeSpan,System.TimeSpan[],System.String)">
            <summary>
            Verifica se contém o valor na lista. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.Contains(System.TimeSpan,System.TimeSpan[],System.String,System.String)">
            <summary>
            Verifica se contém o valor na lista.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.NotContains(System.TimeSpan,System.TimeSpan[],System.String)">
            <summary>
            Verifica se não contém o valor na lista. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.NotContains(System.TimeSpan,System.TimeSpan[],System.String,System.String)">
            <summary>
            Verifica se não contém o valor na lista.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.All(System.TimeSpan,System.TimeSpan[],System.String)">
            <summary>
            Verifica se todos os valores são iguais ao valor comparado. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.All(System.TimeSpan,System.TimeSpan[],System.String,System.String)">
            <summary>
            Verifica se todos os valores são iguais ao valor comparado.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.NotAll(System.TimeSpan,System.TimeSpan[],System.String)">
            <summary>
            Verifica se todos os valores são diferentes ao valor comparado. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.NotAll(System.TimeSpan,System.TimeSpan[],System.String,System.String)">
            <summary>
            Verifica se todos os valores são diferentes ao valor comparado.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="list">Lista de valores a ser comparado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNull(System.Nullable{System.TimeSpan},System.String)">
            <summary>
            Valida se o valor é nulo. Com a mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Nome da propriedade.</param>
            <returns>Contrato.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNull(System.Nullable{System.TimeSpan},System.String,System.String)">
            <summary>
            Valida se o valor é nulo.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Nome da propriedade.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotNull(System.Nullable{System.TimeSpan},System.String)">
            <summary>
            Valida se o valor não é nulo. Com a mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Nome da propriedade.</param>
            <returns>Contrato.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNotNull(System.Nullable{System.TimeSpan},System.String,System.String)">
            <summary>
            Valida se o valor é nulo.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Nome da propriedade.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsGuid(System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de GUID. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsGuid(System.String,System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de GUID.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsLetter(System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de Letras. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsLetter(System.String,System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de Letras.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsLetterLower(System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de Letra Minúscula. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsLetterLower(System.String,System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de Letra Minúscula.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsLetterUpper(System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de Letra Maiúscula. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsLetterUpper(System.String,System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de Letra Maiúscula.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNumeric(System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de Números. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsNumeric(System.String,System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de Números.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsLetterNumeric(System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de Letras e Números. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsLetterNumeric(System.String,System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de Letras e Números.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsHexadecimal(System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de Hexadecimal. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsHexadecimal(System.String,System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de Hexadecimal.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsZipCode(System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de Código Postal. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsZipCode(System.String,System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de Código Postal.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsBase64(System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de Base64. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsBase64(System.String,System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de Base64.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsPassword(System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de Senha Complexa. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsPassword(System.String,System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato de Senha Complexa.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsCulture(System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato do idioma para Cultura. Com mensagem padrão.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Contract.IsCulture(System.String,System.String,System.String)">
            <summary>
            Verifica se o valor corresponde ao formato do idioma para Cultura.
            </summary>
            <param name="value">Valor a ser validado.</param>
            <param name="property">Propriedade a ser validada.</param>
            <param name="message">Mensagem de erro.</param>
            <returns>Contrato de validação.</returns>
        </member>
        <member name="M:Tooark.Validations.Messages.ValidationErrorMessages.PropertyNormalize(System.String)">
            <summary>
            Normaliza a propriedade.
            </summary>
            <remarks>
            Remove os espaços em branco e os substitui por vazio.
            </remarks>
            <param name="property">Propriedade a ser normalizada.</param>
            <returns>Propriedade normalizada.</returns>
        </member>
        <member name="M:Tooark.Validations.Messages.ValidationErrorMessages.BooleanIsFalse(System.String)">
            <summary>
            Mensagem de erro para validação se o boolean é falso.
            </summary>
            <remarks>
            O valor da propriedade {0} não é falso.
            </remarks>
            <param name="property">Propriedade da validação.</param>
            <returns>Mensagem de erro.</returns>
        </member>
        <member name="M:Tooark.Validations.Messages.ValidationErrorMessages.BooleanIsTrue(System.String)">
            <summary>
            Mensagem de erro para validação se o boolean é verdadeiro.
            </summary>
            <remarks>
            O valor da propriedade {0} não é verdadeiro.
            </remarks>
            <param name="property">Propriedade da validação.</param>
            <returns>Mensagem de erro.</returns>
        </member>
        <member name="M:Tooark.Validations.Messages.ValidationErrorMessages.IsGreater(System.String,System.String)">
            <summary>
            Mensagem de erro para validação se é maior que valor informado.
            </summary>
            <remarks>
            O valor da propriedade {0} não é maior que {1}.
            </remarks>
            <param name="property">Propriedade da validação.</param>
            <param name="comparer">Valor de comparação.</param>
            <returns>Mensagem de erro.</returns>
        </member>
        <member name="M:Tooark.Validations.Messages.ValidationErrorMessages.IsGreaterOrEquals(System.String,System.String)">
            <summary>
            Mensagem de erro para validação se é maior ou igual ao valor informado.
            </summary>
            <remarks>
            O valor da propriedade {0} não é maior ou igual a {1}.
            </remarks>
            <param name="property">Propriedade da validação.</param>
            <param name="comparer">Valor de comparação.</param>
            <returns>Mensagem de erro.</returns>
        </member>
        <member name="M:Tooark.Validations.Messages.ValidationErrorMessages.IsLower(System.String,System.String)">
            <summary>
            Mensagem de erro para validação se é menor que valor informado.
            </summary>
            <remarks>
            O valor da propriedade {0} não é menor que {1}.
            </remarks>
            <param name="property">Propriedade da validação.</param>
            <param name="comparer">Valor de comparação.</param>
            <returns>Mensagem de erro.</returns>
        </member>
        <member name="M:Tooark.Validations.Messages.ValidationErrorMessages.IsLowerOrEquals(System.String,System.String)">
            <summary>
            Mensagem de erro para validação se é menor ou igual ao valor informado.
            </summary>
            <remarks>
            O valor da propriedade {0} não é menor ou igual a {1}.
            </remarks>
            <param name="property">Propriedade da validação.</param>
            <param name="comparer">Valor de comparação.</param>
            <returns>Mensagem de erro.</returns>
        </member>
        <member name="M:Tooark.Validations.Messages.ValidationErrorMessages.IsBetween(System.String,System.String,System.String)">
            <summary>
            Mensagem de erro para validação se está entre os valores informados.
            </summary>
            <remarks>
            O valor da propriedade {0} não está entre {1} e {2}.
            </remarks>
            <param name="property">Propriedade da validação.</param>
            <param name="start">Valor inicial.</param>
            <param name="end">Valor final.</param>
            <returns>Mensagem de erro.</returns>
        </member>
        <member name="M:Tooark.Validations.Messages.ValidationErrorMessages.IsNotBetween(System.String,System.String,System.String)">
            <summary>
            Mensagem de erro para validação se não está entre os valores informados.
            </summary>
            <remarks>
            O valor da propriedade {0} está entre {1} e {2}.
            </remarks>
            <param name="property">Propriedade da validação.</param>
            <param name="start">Valor inicial.</param>
            <param name="end">Valor final.</param>
            <returns>Mensagem de erro.</returns>
        </member>
        <member name="M:Tooark.Validations.Messages.ValidationErrorMessages.IsMin(System.String,System.String)">
            <summary>
            Mensagem de erro para validação se é igual ao menor valor do tipo.
            </summary>
            <remarks>
            O valor da propriedade {0} não é o menor valor: {1}.
            </remarks>
            <param name="property">Propriedade da validação.</param>
            <param name="comparer">Valor de comparação.</param>
            <returns>Mensagem de erro.</returns>
        </member>
        <member name="M:Tooark.Validations.Messages.ValidationErrorMessages.IsNotMin(System.String,System.String)">
            <summary>
            Mensagem de erro para validação se não é igual ao menor valor do tipo.
            </summary>
            <remarks>
            O valor da propriedade {0} é o menor valor: {1}.
            </remarks>
            <param name="property">Propriedade da validação.</param>
            <param name="comparer">Valor de comparação.</param>
            <returns>Mensagem de erro.</returns>
        </member>
        <member name="M:Tooark.Validations.Messages.ValidationErrorMessages.IsMax(System.String,System.String)">
            <summary>
            Mensagem de erro para validação se é igual ao maior valor do tipo.
            </summary>
            <remarks>
            O valor da propriedade {0} não é o maior valor: {1}.
            </remarks>
            <param name="property">Propriedade da validação.</param>
            <param name="comparer">Valor de comparação.</param>
            <returns>Mensagem de erro.</returns>
        </member>
        <member name="M:Tooark.Validations.Messages.ValidationErrorMessages.IsNotMax(System.String,System.String)">
            <summary>
            Mensagem de erro para validação se não é igual ao maior valor do tipo.
            </summary>
            <remarks>
            O valor da propriedade {0} é o maior valor: {1}.
            </remarks>
            <param name="property">Propriedade da validação.</param>
            <param name="comparer">Valor de comparação.</param>
            <returns>Mensagem de erro.</returns>
        </member>
        <member name="M:Tooark.Validations.Messages.ValidationErrorMessages.AreEquals(System.String,System.String)">
            <summary>
            Mensagem de erro para validação se é igual ao valor informado.
            </summary>
            <remarks>
            O valor da propriedade {0} não é igual a {1}.
            </remarks>
            <param name="property">Propriedade da validação.</param>
            <param name="comparer">Valor de comparação.</param>
            <returns>Mensagem de erro.</returns>
        </member>
        <member name="M:Tooark.Validations.Messages.ValidationErrorMessages.AreNotEquals(System.String,System.String)">
            <summary>
            Mensagem de erro para validação se não é igual ao valor informado.
            </summary>
            <remarks>
            O valor da propriedade {0} é igual a {1}.
            </remarks>
            <param name="property">Propriedade da validação.</param>
            <param name="comparer">Valor de comparação.</param>
            <returns>Mensagem de erro.</returns>
        </member>
        <member name="M:Tooark.Validations.Messages.ValidationErrorMessages.Contains(System.String,System.String)">
            <summary>
            Mensagem de erro para validação se contém o valor informado.
            </summary>
            <remarks>
            O valor da propriedade {0} não contém {1}.
            </remarks>
            <param name="property">Propriedade da validação.</param>
            <param name="value">Valor buscado.</param>
            <returns>Mensagem de erro.</returns>
        </member>
        <member name="M:Tooark.Validations.Messages.ValidationErrorMessages.NotContains(System.String,System.String)">
            <summary>
            Mensagem de erro para validação se não contém o valor informado.
            </summary>
            <remarks>
            O valor da propriedade {0} contém {1}.
            </remarks>
            <param name="property">Propriedade da validação.</param>
            <param name="value">Valor buscado.</param>
            <returns>Mensagem de erro.</returns>
        </member>
        <member name="M:Tooark.Validations.Messages.ValidationErrorMessages.All(System.String,System.String)">
            <summary>
            Mensagem de erro para validação se todos são o valor informado.
            </summary>
            <remarks>
            Os valores da propriedade {0} não são todos {1}.
            </remarks>
            <param name="property">Propriedade da validação.</param>
            <param name="value">Valor buscado.</param>
            <returns>Mensagem de erro.</returns>
        </member>
        <member name="M:Tooark.Validations.Messages.ValidationErrorMessages.NotAll(System.String,System.String)">
            <summary>
            Mensagem de erro para validação se nem todos são o valor informado.
            </summary>
            <remarks>
            Os valores da propriedade {0} são todos {1}.
            </remarks>
            <param name="property">Propriedade da validação.</param>
            <param name="value">Valor buscado.</param>
            <returns>Mensagem de erro.</returns>
        </member>
        <member name="M:Tooark.Validations.Messages.ValidationErrorMessages.IsNull(System.String)">
            <summary>
            Mensagem de erro para validação se é nulo.
            </summary>
            <remarks>
            O valor da propriedade {0} não é nulo.
            </remarks>
            <param name="property">Propriedade da validação.</param>
            <returns>Mensagem de erro.</returns>
        </member>
        <member name="M:Tooark.Validations.Messages.ValidationErrorMessages.IsNotNull(System.String)">
            <summary>
            Mensagem de erro para validação se não é nulo.
            </summary>
            <remarks>
            O valor da propriedade {0} é nulo.
            </remarks>
            <param name="property">Propriedade da validação.</param>
            <returns>Mensagem de erro.</returns>
        </member>
        <member name="M:Tooark.Validations.Messages.ValidationErrorMessages.IsEmpty(System.String)">
            <summary>
            Mensagem de erro para validação se é vazio.
            </summary>
            <remarks>
            O valor da propriedade {0} não é vazio.
            </remarks>
            <param name="property">Propriedade da validação.</param>
            <returns>Mensagem de erro.</returns>
        </member>
        <member name="M:Tooark.Validations.Messages.ValidationErrorMessages.IsNotEmpty(System.String)">
            <summary>
            Mensagem de erro para validação se não é vazio.
            </summary>
            <remarks>
            O valor da propriedade {0} é vazio.
            </remarks>
            <param name="property">Propriedade da validação.</param>
            <returns>Mensagem de erro.</returns>
        </member>
        <member name="M:Tooark.Validations.Messages.ValidationErrorMessages.Match(System.String,System.String)">
            <summary>
            Mensagem de erro para validação se corresponde a um regex.
            </summary>
            <remarks>
            O valor da propriedade {0} não corresponde ao padrão {1}.
            </remarks>
            <param name="property">Propriedade da validação.</param>
            <param name="value">Valor buscado.</param>
            <returns>Mensagem de erro.</returns>
        </member>
        <member name="M:Tooark.Validations.Messages.ValidationErrorMessages.NotMatch(System.String,System.String)">
            <summary>
            Mensagem de erro para validação se não corresponde a um regex.
            </summary>
            <remarks>
            O valor da propriedade {0} corresponde ao padrão {1}.
            </remarks>
            <param name="property">Propriedade da validação.</param>
            <param name="value">Valor buscado.</param>
            <returns>Mensagem de erro.</returns>
        </member>
        <member name="M:Tooark.Validations.Messages.ValidationErrorMessages.IsNullOrEmpty(System.String)">
            <summary>
            Mensagem de erro para validação se é nulo ou vazio.
            </summary>
            <remarks>
            O valor da propriedade {0} não é nulo nem vazio.
            </remarks>
            <param name="property">Propriedade da validação.</param>
            <returns>Mensagem de erro.</returns>
        </member>
        <member name="M:Tooark.Validations.Messages.ValidationErrorMessages.IsNotNullOrEmpty(System.String)">
            <summary>
            Mensagem de erro para validação se não é nulo nem vazio.
            </summary>
            <remarks>
            O valor da propriedade {0} é nulo ou vazio.
            </remarks>
            <param name="property">Propriedade da validação.</param>
            <returns>Mensagem de erro.</returns>
        </member>
        <member name="M:Tooark.Validations.Messages.ValidationErrorMessages.IsNullOrWhiteSpace(System.String)">
            <summary>
            Mensagem de erro para validação se é nulo, vazio ou espaço em branco.
            </summary>
            <remarks>
            O valor da propriedade {0} não é nulo, vazio ou espaço em branco.
            </remarks>
            <param name="property">Propriedade da validação.</param>
            <returns>Mensagem de erro.</returns>
        </member>
        <member name="M:Tooark.Validations.Messages.ValidationErrorMessages.IsNotNullOrWhiteSpace(System.String)">
            <summary>
            Mensagem de erro para validação se não é nulo, vazio nem espaço em branco.
            </summary>
            <remarks>
            O valor da propriedade {0} é nulo, vazio ou espaço em branco.
            </remarks>
            <param name="property">Propriedade da validação.</param>
            <returns>Mensagem de erro.</returns>
        </member>
        <member name="M:Tooark.Validations.Messages.ValidationErrorMessages.IsDocument(System.String,System.String)">
            <summary>
            Mensagem de erro para validação se Documento é valido.
            </summary>
            <remarks>
            O valor da propriedade {0} não é um documento válido: {1}.
            </remarks>
            <param name="property">Propriedade da validação.</param>
            <param name="formatter">Formatado do documento.</param>
            <returns>Mensagem de erro.</returns>
        </member>
        <member name="M:Tooark.Validations.Messages.ValidationErrorMessages.IsValid(System.String,System.String)">
            <summary>
            Mensagem de erro para validação campo genérico.
            </summary>
            <remarks>
            O valor da propriedade {0} não é válido para {1}.
            </remarks>
            <param name="property">Propriedade da validação.</param>
            <param name="type">Tipo da validação.</param>
            <returns>Mensagem de erro.</returns>
        </member>
        <member name="P:Tooark.Validations.Messages.ValidationErrorMessages.CpfFormatter">
            <summary>
            Formatação de CPF.
            </summary>
            <returns>Formato do CPF.</returns>
        </member>
        <member name="P:Tooark.Validations.Messages.ValidationErrorMessages.RgFormatter">
            <summary>
            Formatação de RG.
            </summary>
            <returns>Formato do RG.</returns>
        </member>
        <member name="P:Tooark.Validations.Messages.ValidationErrorMessages.CnhFormatter">
            <summary>
            Formatação de CNH.
            </summary>
            <returns>Formato do CNH.</returns>
        </member>
        <member name="P:Tooark.Validations.Messages.ValidationErrorMessages.CnpjFormatter">
            <summary>
            Formatação de CNPJ.
            </summary>
            <returns>Formato do CNPJ.</returns>
        </member>
        <member name="P:Tooark.Validations.Messages.ValidationErrorMessages.CpfRgFormatter">
            <summary>
            Formatação de CPF e RG.
            </summary>
            <returns>Formato do CPF e RG.</returns>
        </member>
        <member name="P:Tooark.Validations.Messages.ValidationErrorMessages.CpfRgCnhFormatter">
            <summary>
            Formatação de CPF, RG e CNH.
            </summary>
            <returns>Formato do CPF, RG e CNH.</returns>
        </member>
        <member name="P:Tooark.Validations.Messages.ValidationErrorMessages.CpfCnpjFormatter">
            <summary>
            Formatação de CPF e CNPJ.
            </summary>
            <returns>Formato do CPF e CNPJ.</returns>
        </member>
        <member name="F:Tooark.Validations.Patterns.RegexPattern.Cpf">
            <summary>
            Padrão de CPF.
            </summary>
        </member>
        <member name="F:Tooark.Validations.Patterns.RegexPattern.Rg">
            <summary>
            Padrão de RG.
            </summary>
        </member>
        <member name="F:Tooark.Validations.Patterns.RegexPattern.Cnh">
            <summary>
            Padrão de CNH.
            </summary>
        </member>
        <member name="F:Tooark.Validations.Patterns.RegexPattern.CpfRg">
            <summary>
            Padrão de CPF ou RG.
            </summary>
        </member>
        <member name="F:Tooark.Validations.Patterns.RegexPattern.CpfRgCnh">
            <summary>
            Padrão de CPF, RG ou CNH.
            </summary>
        </member>
        <member name="F:Tooark.Validations.Patterns.RegexPattern.Cnpj">
            <summary>
            Padrão de CNPJ.
            </summary>
        </member>
        <member name="F:Tooark.Validations.Patterns.RegexPattern.CpfCnpj">
            <summary>
            Padrão de CPF ou CNPJ.
            </summary>
        </member>
        <member name="F:Tooark.Validations.Patterns.RegexPattern.Email">
            <summary>
            Padrão de e-mail.
            </summary>
        </member>
        <member name="F:Tooark.Validations.Patterns.RegexPattern.EmailDomain">
            <summary>
            Padrão de domínio de e-mail.
            </summary>
        </member>
        <member name="F:Tooark.Validations.Patterns.RegexPattern.Ip">
            <summary>
            Padrão de IP.
            </summary>
        </member>
        <member name="F:Tooark.Validations.Patterns.RegexPattern.Ipv4">
            <summary>
            Padrão de IPv4.
            </summary>
        </member>
        <member name="F:Tooark.Validations.Patterns.RegexPattern.Ipv6">
            <summary>
            Padrão de IPv6.
            </summary>
        </member>
        <member name="F:Tooark.Validations.Patterns.RegexPattern.MacAddress">
            <summary>
            Padrão de MAC Address.
            </summary>
        </member>
        <member name="F:Tooark.Validations.Patterns.RegexPattern.Guid">
            <summary>
            Padrão de GUID.
            </summary>
        </member>
        <member name="F:Tooark.Validations.Patterns.RegexPattern.Letter">
            <summary>
            Padrão de letras.
            </summary>
        </member>
        <member name="F:Tooark.Validations.Patterns.RegexPattern.LetterLower">
            <summary>
            Padrão de letras minúsculas.
            </summary>
        </member>
        <member name="F:Tooark.Validations.Patterns.RegexPattern.LetterUpper">
            <summary>
            Padrão de letras maiúsculas.
            </summary>
        </member>
        <member name="F:Tooark.Validations.Patterns.RegexPattern.Numeric">
            <summary>
            Padrão de números.
            </summary>
        </member>
        <member name="F:Tooark.Validations.Patterns.RegexPattern.LetterNumeric">
            <summary>
            Padrão de letras e números.
            </summary>
        </member>
        <member name="F:Tooark.Validations.Patterns.RegexPattern.Hexadecimal">
            <summary>
            Padrão de hexadecimal.
            </summary>
        </member>
        <member name="F:Tooark.Validations.Patterns.RegexPattern.ZipCode">
            <summary>
            Padrão de ZIP Code.
            </summary>
        </member>
        <member name="F:Tooark.Validations.Patterns.RegexPattern.Base64">
            <summary>
            Padrão de Base64.
            </summary>
        </member>
        <member name="F:Tooark.Validations.Patterns.RegexPattern.Password">
            <summary>
            Padrão de Senha Complexa.
            </summary>
        </member>
        <member name="F:Tooark.Validations.Patterns.RegexPattern.Culture">
            <summary>
            Padrão de Cultura para Internacionalização.
            </summary>
        </member>
        <member name="F:Tooark.Validations.Patterns.RegexPattern.Url">
            <summary>
            Padrão de URL.
            </summary>
        </member>
        <member name="F:Tooark.Validations.Patterns.RegexPattern.Ftp">
            <summary>
            Padrão de FTP.
            </summary>
        </member>
        <member name="F:Tooark.Validations.Patterns.RegexPattern.Sftp">
            <summary>
            Padrão de SFTP.
            </summary>
        </member>
        <member name="F:Tooark.Validations.Patterns.RegexPattern.ProtocolFtp">
            <summary>
            Padrão de Protocolo FTP.
            </summary>
        </member>
        <member name="F:Tooark.Validations.Patterns.RegexPattern.Http">
            <summary>
            Padrão de HTTP.
            </summary>
        </member>
        <member name="F:Tooark.Validations.Patterns.RegexPattern.Https">
            <summary>
            Padrão de HTTPS.
            </summary>
        </member>
        <member name="F:Tooark.Validations.Patterns.RegexPattern.ProtocolHttp">
            <summary>
            Padrão de Protocolo HTTP.
            </summary>
        </member>
        <member name="F:Tooark.Validations.Patterns.RegexPattern.Imap">
            <summary>
            Padrão de IMAP.
            </summary>
        </member>
        <member name="F:Tooark.Validations.Patterns.RegexPattern.Pop3">
            <summary>
            Padrão de POP3.
            </summary>
        </member>
        <member name="F:Tooark.Validations.Patterns.RegexPattern.ProtocolEmailReceiver">
            <summary>
            Padrão de Protocolo para Receber Email.
            </summary>
        </member>
        <member name="F:Tooark.Validations.Patterns.RegexPattern.Smtp">
            <summary>
            Padrão de SMTP.
            </summary>
        </member>
        <member name="F:Tooark.Validations.Patterns.RegexPattern.ProtocolEmailSender">
            <summary>
            Padrão de Protocolo para Enviar Email.
            </summary>
        </member>
        <member name="F:Tooark.Validations.Patterns.RegexPattern.Ws">
            <summary>
            Padrão de Web Socket.
            </summary>
        </member>
        <member name="F:Tooark.Validations.Patterns.RegexPattern.Wss">
            <summary>
            Padrão de Web Socket Seguro.
            </summary>
        </member>
        <member name="F:Tooark.Validations.Patterns.RegexPattern.ProtocolWebSocket">
            <summary>
            Padrão de Protocolo Web Socket.
            </summary>
        </member>
    </members>
</doc>
