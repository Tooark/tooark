name: Build and deploy package

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up .Net Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'
        source-url: https://nuget.pkg.github.com/Grupo-Jacto/index.json
      env:
        NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
    
    - name: Build with .NET
      run: dotnet build --configuration Release

    - name: Tests with .NET
      run: dotnet test

    - name: Create the package
      run: dotnet pack --configuration Release /p:NoWarn="1591"
  
    - name: Extract version from csproj
      id: extract_version
      run: |
        VERSION=$(grep -oPm1 "(?<=<Version>)[^<]+" Tooark/Tooark.csproj)
        echo "VERSION=$VERSION" >> $GITHUB_ENV 

    - name: Check if the version tag exists
      id: check_tag
      run: |
        if git rev-parse "v${{ env.VERSION }}" >/dev/null 2>&1; then
          echo "Tag exists"
          echo "::set-output name=has_tag::true"
        else
          echo "Tag does not exist"
          echo "::set-output name=has_tag::false"
        fi 

    - name: Create a new tag and release if necessary
      if: steps.check_tag.outputs.has_tag == 'false'
      run: |
        git tag "v${{ env.VERSION }}"
        git push origin "v${{ env.VERSION }}"
        curl -X POST \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/Grupo-Jacto/tooark/releases \
          -d @- <<EOF
          {
            "tag_name": "v${{ env.VERSION }}",
            "target_commitish": "main",
            "name": "Release v${{ env.VERSION }}",
            "body": "Automated release for version v${{ env.VERSION }}",
            "draft": false,
            "prerelease": false
          }

    - name: Publish the package to GPR
      run: dotnet nuget push Tooark/bin/Release/*.nupkg --source "https://nuget.pkg.github.com/Grupo-Jacto" --api-key ${{secrets.GITHUB_TOKEN}}
